{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Watcherstream Setup Development To write code and generate the documentation you need to install the packages listed in requirements.txt with pip pip install -r requirements.txt To use the surrortg-sdk initialize and update the submodule with: git submodule init git submodule update Note To import modules from the surrortg-sdk you have to extend the PYTHONPATH : import sys , os sys . path . insert ( 1 , os . path . join ( os . path . dirname ( os . path . abspath ( __file__ )), os . pardir , \"lib\" , \"surrortg-sdk\" )) from surrortg import <...> Documentation The Documentation is generated with the help of mkdocstrings . To implement a module, class or function into your documentation you have to reference it as follows: ::: library.module ::: library.module.class ::: library.module.function Run To run the watcherstream you have to create a Docker image from the Dockerfile and run it in a container by running the docker-setup script. Info To use Docker on Windows you need to install the wsl Now set up OBS like explained in the Surrogate docs but change the recording path to the srtg_hls Folder in this repository. Next generate the configuration for the watcherstream ( srtg.toml ) by running scripts/generate-config . The script takes the Device Id and Game Token as argument. python3 scripts/generate-config <device_id> <token> Danger Never upload the game token","title":"Setup"},{"location":"#watcherstream-setup","text":"","title":"Watcherstream Setup"},{"location":"#development","text":"To write code and generate the documentation you need to install the packages listed in requirements.txt with pip pip install -r requirements.txt To use the surrortg-sdk initialize and update the submodule with: git submodule init git submodule update Note To import modules from the surrortg-sdk you have to extend the PYTHONPATH : import sys , os sys . path . insert ( 1 , os . path . join ( os . path . dirname ( os . path . abspath ( __file__ )), os . pardir , \"lib\" , \"surrortg-sdk\" )) from surrortg import <...>","title":"Development"},{"location":"#documentation","text":"The Documentation is generated with the help of mkdocstrings . To implement a module, class or function into your documentation you have to reference it as follows: ::: library.module ::: library.module.class ::: library.module.function","title":"Documentation"},{"location":"#run","text":"To run the watcherstream you have to create a Docker image from the Dockerfile and run it in a container by running the docker-setup script. Info To use Docker on Windows you need to install the wsl Now set up OBS like explained in the Surrogate docs but change the recording path to the srtg_hls Folder in this repository. Next generate the configuration for the watcherstream ( srtg.toml ) by running scripts/generate-config . The script takes the Device Id and Game Token as argument. python3 scripts/generate-config <device_id> <token> Danger Never upload the game token","title":"Run"}]}